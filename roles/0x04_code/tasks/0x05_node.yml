---

- name: register nvm install script name
  become: true
  become_user: sjas
  command: echo v0.39.3
  register: nvm_installer_version
  changed_when: false

- name: register current node version to be used
  become: true
  become_user: sjas
  command: echo v19.4.0
  register: nodejs_version
  changed_when: false

- name: check if nvm is already installed
  shell: export NVM_DIR=/home/sjas/.nvm && . /home/sjas/.nvm/nvm.sh && nvm --version || exit 1
  register: exitcode_nvm_install
  ignore_errors: true
  changed_when: false

- name: make sure destination folder exists
  become: true
  become_user: sjas
  file:
    path: "/home/sjas/.nvm"
    state: directory
    mode: 0775

- name: nvm
  block:
    - name: get nvm
      get_url:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/{{ nvm_installer_version.stdout }}/install.sh
        dest: /tmp
        mode: 0755
    - name: install nvm
      command: /tmp/install.sh
      args:
        creates: "/home/sjas/.nvm/nvm.sh"
    - name: cleanup nvm installer
      file:
        path: "/tmp/install.sh"
        state: absent
  when: exitcode_nvm_install.rc != 0
  become: true
  become_user: sjas

- name: clean NVM_DIR var from .bashrc
  lineinfile:
    path: /home/sjas/.bashrc
    regex: "export NVM_DIR.*"
    state: absent

- name: always purge OS nodejs if exists
  apt:
    purge: true
    state: absent
    name:
      - nodejs
      - nodejs-doc

- name: check if node.js {{ nodejs_version.stdout }} is already installed
  become: true
  become_user: sjas
  shell: export NVM_DIR=/home/sjas/.nvm && . /home/sjas/.nvm/nvm.sh && nvm ls {{ nodejs_version.stdout }}
  register: exitcode_nodejs_install
  ignore_errors: true
  changed_when: false

- name: install node.js {{ nodejs_version.stdout }}
  become: true
  become_user: sjas
  shell: export NVM_DIR=/home/sjas/.nvm && . /home/sjas/.nvm/nvm.sh && nvm install {{ nodejs_version.stdout }}
  when: exitcode_nodejs_install.rc != 0
  notify: node_shell_relogin

- name: set node.js {{ nodejs_version.stdout }} as default
  become: true
  become_user: sjas
  shell: export NVM_DIR=/home/sjas/.nvm && . /home/sjas/.nvm/nvm.sh && nvm alias default {{ nodejs_version.stdout }}
  when: exitcode_nodejs_install.rc != 0
  notify: node_shell_relogin

- name: get path current nodejs for setcap'ing
  become: true
  become_user: sjas
  # command: "find /home/sjas/.nvm/versions/node/ -type f -iname node | grep {{ nodejs_version.stdout }}"
  shell: find /home/sjas/.nvm/versions/node/ -type f -iname node|grep {{ nodejs_version.stdout }}
  register: nodejs_path
  changed_when: false

- name: setcap on current nodejs so it can open ports 1024
  capabilities:
    path: "{{ nodejs_path.stdout }}"
    cap: "CAP_NET_BIND_SERVICE=+ep"
  when: nodejs_path.rc == 0
  changed_when: false

- name: fix npm bash completion
  lineinfile:
    path: /home/sjas/.bashrc
    line: 'i="$NVM_DIR/versions/node/$(nvm version)/lib/node_modules/npm/lib/utils/completion.sh"&&[[ -s "$i" ]]&&. "$i" #npm completion'
    state: present

- name: fix nvm include being shell instead of bash
  lineinfile:
    path: /home/sjas/.bashrc
    regexp: '[ -s "\$NVM_DIR/nvm.sh" ] && \\. "\$NVM_DIR/nvm.sh".*'
    line: '[[ -s "$NVM_DIR/nvm.sh" ]]&&. "$NVM_DIR/nvm.sh"  # This loads nvm'

- name: fix nvm_bash_completion include being shell instead of bash
  lineinfile:
    path: /home/sjas/.bashrc
    regexp: '[ -s "\$NVM_DIR/bash_completion" ] && \\. "\$NVM_DIR/bash_completion".*'
    line: '[[ -s "$NVM_DIR/bash_completion" ]]&&. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion'
