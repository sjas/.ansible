# bash environment
#
# shellcheck shell=bash

## GENERAL
## PROMPT
## SHELL
## BASH
## HISTORY
## LESS
## $PATH,NODEJS,GOLANG,JAVA,RUSTLANG,$PATH





## GENERAL ##################################################################################################
export EDITOR="vim"
export VISUAL="vim"
export PAGER="less"

export LANGUAGE="en_US:en"

export DOTFILES="/home/sjas/etc/.ansible"

# shellcheck disable=SC1091
if ! shopt -oq posix
then
	if [[ -f /usr/share/bash-completion/bash_completion ]]
    then
        . /usr/share/bash-completion/bash_completion
	elif [[ -f /etc/bash_completion ]]
    then
        . /etc/bash_completion
    fi
fi





## PROMPT ###################################################################################################
export PS1='$( i=$?;if [[ $i -eq 0 ]];then echo \\\[\e[38\;5\;76\;1m\\\]$i; else echo \\\[\e[38\;5\;196\;1m\\\]$i; fi )\[\e[0m\] \u@\h \[\e[38;5;228;1m\]\t\[\e[0m\] \w$(if git status 2>/dev/null|grep -q "nothing to commit";then echo \ \\\[\e[48\;5\;34\;37\;1m\\\];else if git status 2>/dev/null|grep -qi -e"^Changes not staged for commit" -e"^Untracked files:";then echo \ \\\[\e[48\;5\;196\;37\;1m\\\];else if git status 2>/dev/null|grep -q "to be committed";then echo \ \\\[\e[46\;37\;1m\\\];else echo \ \\\[\e[45\;37\;1m\\\];fi;fi;fi)$(__git_ps1|cut -c2-)\[\e[m\] \[\e[m\]$\[\e[m\]\[\e[36;1m\]$SHLVL\[\e[m\] \[\e[m\]h\[\e[m\]\[\e[36;1m\]\!\[\e[m\] \[\e[m\]c\[\e[m\]\[\e[36;1m\]\#\[\e[m\] \[\e[37;1m\]\$\[\e[m\] \n'

#export PS0='\n'  ## show a newline after any entered command. works in unison with a `echo` in PROMPT_COMMAND
export PS0='command start: \t\n\n'  ## show a newline after any entered command. works in unison with a `echo` in PROMPT_COMMAND
#export PS2="> "  ## unchanged
export PS3="select> "
export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'  ## make `set -x` more readable

export PROMPT_COMMAND='printf "\n"'





## SHELL ####################################################################################################
# show $SHELLOPTS `set +o`
# go partially for 'bash strict mode'
# but without -e / -u or changing IFS
#set -e
#set -u
set -o pipefail
#IFS="\n\t"

#set -x





## BASH #####################################################################################################
# show $BASHOPTS `shopt -p`
shopt -s autocd
shopt -s checkhash
shopt -s checkjobs
shopt -s checkwinsize
shopt -s cmdhist
shopt -s dotglob
shopt -s globstar
shopt -s gnu_errfmt
shopt -s histappend
shopt -s histverify
shopt -s interactive_comments
shopt -s no_empty_cmd_completion
shopt -s nocaseglob
shopt -s nullglob
shopt -s progcomp
shopt -s promptvars
shopt -s shift_verbose
shopt -u sourcepath  ## dont search PATH for `. FILE`! 





## HISTORY ##################################################################################################
#unlimited history without getting cleaned up
HISTCONTROL=""
HISTSIZE="-1"
HISTFILESIZE="-1"
HISTTIMEFORMAT="%F_%T  "





## LESS #####################################################################################################
#colored manpages
export LESS_TERMCAP_mb=$'\E[32m'	# begin blinking
export LESS_TERMCAP_md=$'\E[38;5;196m'	# begin bold				== RED    = command and flag color
export LESS_TERMCAP_us=$'\E[38;5;220m'	# begin underline 			== YELLOW = parameter color
export LESS_TERMCAP_me=$'\E[0m'		# end mode
export LESS_TERMCAP_se=$'\E[0m'		# end standout-mode
export LESS_TERMCAP_so=$'\E[38m'	# begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'		# end underline

#couple global(1) with less(1)
export LESSGLOBALTAGS="global"

#syntax highlighting, needs `libsource-highlight-common` package
#find path via `dpkg -L libsource-highlight-common | grep lesspipe`
export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
export LESS=" -R "





## $PATH,NODEJS,GOLANG,JAVA,RUSTLANG,$PATH ##################################################################
# helper function; the only sane way that works
#fixme [..] vs. [[..]] and quoting
addtopath() {
	if [[ -d "$1" ]] && [[ ":${PATH}:" != *":$1:"* ]]
	then
		PATH="$1${PATH:+":${PATH}:"}"
	fi
	PATH=$(echo "${PATH}" | sed -e 's/^:*//g' -e 's/:*$//g')
}

#   N O D E J S
#export NVM_DIR="$HOME/.nvm"
export NVM_DIR="/home/sjas/.nvm"

#   G O L A N G
export GOROOT="/usr/local/go"
# dont just get rid of GOPATH YET, `go get` still seems to use it
export GOPATH="/home/sjas/go"  ## def.: "${HOME}/go"
export GO111MODULE="on"
#export GOGC=100  ## def.: 100: run garbage collector once the heap size doubles

#   J A V A 
#export JAVA_HOME=/usr/lib/jvm/java-1.8.0-amazon-corretto
#export  J2SDKDIR=/usr/lib/jvm/java-1.8.0-amazon-corretto
#export   J2REDIR=/usr/lib/jvm/java-1.8.0-amazon-corretto/jre
#export JAVA_HOME=/usr/lib/jvm/java-se-7u75-ri
#export  J2SDKDIR=/usr/lib/jvm/java-se-7u75-ri
#export   J2REDIR=/usr/lib/jvm/java-se-7u75-ri/jre

#   R U S T L A N G
export CARGO_HOME="/home/sjas/.cargo"  ## non-official var

#   P A T H
for i
in  /usr/local/bin \
    /usr/local/sbin \
    /home/sjas/.local/bin \
	"${GOROOT:-}"/bin \
	"${GOPATH:-}"/bin \
	"${CARGO_HOME:-}"/bin \
	/usr/games
do
	addtopath $i
done

export PATH
