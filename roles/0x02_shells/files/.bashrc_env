# bash environment
#
# shellcheck shell=bash

## GENERAL
## PROMPT
## SHELL
## BASH
## HISTORY
## $EDITOR,$PAGER,LESS(1)
## $PATH,NODEJS,GOLANG,JAVA,RUSTLANG,$PATH
## SCRAPYARD





## GENERAL ##################################################################################################
export LANGUAGE="en_US:en"

export DOTFILES="/home/sjas/etc/.ansible"

# shellcheck disable=SC1091
if ! shopt -oq posix
then
	if [[ -f /usr/share/bash-completion/bash_completion ]]
    then
        . /usr/share/bash-completion/bash_completion
	elif [[ -f /etc/bash_completion ]]
    then
        . /etc/bash_completion
    fi
fi

#ghostty fix for tmux else i.e. backspace acts as space
[[ "$TERM_PROGRAM" == "ghostty" ]]&&export TERM=xterm-256color





## PROMPT ###################################################################################################
# - https://stackoverflow.com/questions/21358613/how-can-i-make-my-terminal-prompt-extend-the-width-of-the-terminal
#
# - https://misc.flogisoft.com/bash/tip_colors_and_formatting
# 48;5;m==bg 38;5;n==fg
# 5;76==neon green,5;196==neon red  ## exitcode
# 5;228==pale yellow  ## time
# 5;34==green,5;208==orange,46==cyan bg,5;196==neon red,43==yellow bg  ## git
#
# the last echo in the last else clause may have a bug due to a nonhandled edge case
# shellcheck disable=SC2154
export PS1='$( i=$?;if [[ $i -eq 0 ]];then echo \\\[\e[38\;5\;76\;1m\\\]$i;else echo \\\[\e[38\;5\;196\;1m\\\]$i;fi )\[\e[0m\] \u@\h \[\e[38;5;228;1m\]\t\[\e[0m\] \w$(_gitstatus=$(git status 2>/dev/null);
if echo ${_gitstatus}|grep -q "nothing to commit";
then
	echo \ \\\[\e[48\;5\;34\;37\;1m\\\];
else
	if echo ${_gitstatus}|grep -qi -e"not staged" -e"Untracked"&&echo ${_gitstatus}|grep -q "to be committed";
	then
		echo \ \\\[\e[48\;5\;208\;37\;1m\\\];
	else
		if echo ${_gitstatus}|grep -q "to be committed";
		then
			echo \ \\\[\e[46\;37\;1m\\\];
		else
			if echo ${_gitstatus}|grep -qi -e"not staged" -e"Untracked";
			then
				echo \ \\\[\e[48\;5\;196\;37\;1m\\\];
			else
				echo \\\[\e[43\;37\;1m\\\];
			fi;
		fi;
	fi;
fi)$(__git_ps1|cut -c2-)\[\e[m\] \[\e[m\]$\[\e[m\]\[\e[36;1m\]$SHLVL\[\e[m\] \[\e[m\]h\[\e[m\]\[\e[36;1m\]\!\[\e[m\] \[\e[m\]c\[\e[m\]\[\e[36;1m\]\#\[\e[m\] \[\e[37;1m\]\$\[\e[m\] \n'

#export PS0='\n'  ## show a newline after any entered command. works in unison with a `echo` in PROMPT_COMMAND
export PS0='command start: \t\n\n'  ## show a newline after any entered command. works in unison with a `echo` in PROMPT_COMMAND
#export PS2="> "  ## unchanged
export PS3="select> "
export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'  ## make `set -x` more readable

export PROMPT_COMMAND='echo "$(date +"%F %T") [$SHELL] $(echo $(fc -ln -0)|sed 's/^\\s\+//g')  ## PID:$$,${USER}@$(hostname):${PWD},SUDO_USER:${SUDO_USER},SSH_CLIENT:${SSH_CLIENT}" >> /home/sjas/.bash_history_complete;printf "\n"'





## SHELL ####################################################################################################
# show $SHELLOPTS `set +o`
# go partially for 'bash strict mode'
# but without -e / -u or changing IFS
#set -e
#set -u
set -o pipefail
#IFS="\n\t"

#set -x





## BASH #####################################################################################################
# show $BASHOPTS `shopt -p`
shopt -s autocd
shopt -s checkhash
shopt -s checkjobs
shopt -s checkwinsize
shopt -s cmdhist
shopt -s dotglob
shopt -s globstar
shopt -s gnu_errfmt
shopt -s histappend
shopt -s histverify
shopt -s interactive_comments
shopt -s no_empty_cmd_completion
shopt -s nocaseglob
shopt -s nullglob
shopt -s progcomp
shopt -s promptvars
shopt -s shift_verbose
shopt -u sourcepath  ## dont search PATH for `. FILE`!





## HISTORY ##################################################################################################
#unlimited history without getting cleaned up
HISTCONTROL=""
HISTSIZE="-1"
HISTFILESIZE="-1"
HISTTIMEFORMAT="%F_%T  "





## $EDITOR,$PAGER,LESS(1) ###################################################################################
export EDITOR="vim"
export VISUAL="vim"
export PAGER="less"

export LESS=" -IRM "
export LESSKEYIN="/home/sjas/.lesskey"
#syntax highlighting, needs `libsource-highlight-common` package
#find path via `dpkg -L libsource-highlight-common | grep lesspipe`
export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
#couple global(1) with less(1)
export LESSGLOBALTAGS="global"
#colored manpages
export LESS_TERMCAP_mb=$'\E[32m'		# begin blinking
export LESS_TERMCAP_md=$'\E[38;5;196m'	# begin bold				== RED    = command and flag color
export LESS_TERMCAP_us=$'\E[38;5;220m'	# begin underline 			== YELLOW = parameter color
export LESS_TERMCAP_me=$'\E[0m'			# end mode
export LESS_TERMCAP_se=$'\E[0m'			# end standout-mode
export LESS_TERMCAP_so=$'\E[38m'		# begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'			# end underline





## $PATH,NODEJS,GOLANG,JAVA,RUSTLANG,$PATH ##################################################################
# helper function; its the only sane way that works
addtopath() {
	if [[ -d "$1" ]] && [[ ":${PATH}:" != *":$1:"* ]]
	then
		PATH="$1${PATH:+":${PATH}:"}"
	fi
	PATH=$(echo "${PATH}" | sed -e 's/^:*//g' -e 's/:*$//g')
}

#   N O D E J S
#export NVM_DIR="$HOME/.nvm"
export NVM_DIR="/home/sjas/.nvm"

#   G O L A N G
#https://pkg.go.dev/cmd/go#hdr-Environment_variables
export GOROOT="/usr/local/go"
# dont just get rid of GOPATH YET, `go get` still seems to use it
export GOPATH="/home/sjas/go"  ## def.: "${HOME}/go"
export GO111MODULE="on"
#export GOGC=100  ## def.: 100: run garbage collector once the heap size doubles

#   R U S T L A N G
export CARGO_HOME="/home/sjas/.cargo"  ## non-official var

#   J A V A
#export JAVA_HOME=/usr/java/jdk1.8.0_202-amd64
#export  J2SDKDIR=/usr/java/jdk1.8.0_202-amd64
#export   J2REDIR=/usr/java/jdk1.8.0_202-amd64/jre

#   P A T H
for i
in  /usr/local/bin \
    /usr/local/sbin \
    /home/sjas/.local/bin \
	"${GOROOT:-}"/bin \
	"${GOPATH:-}"/bin \
	"${CARGO_HOME:-}"/bin \
	\ #"${JAVA_HOME:-}"/bin \
	\ #"${J2REDIR:-}"/bin \
	/usr/lib/cargo/bin \
	/usr/games
do
	addtopath "$i"
done

export PATH





## DOCKER ###################################################################################################
export DOCKER_HOST="unix:///run/user/$UID/podman/podman.sock"
export SRLINUX_IMAGE="ghcr.io/nokia/srlinux:24.10.1"





## SCRAPYARD ################################################################################################
#if [ ! -S ~/.ssh/ssh_auth_sock ]; then
#        eval `ssh-agent`
#        ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
#fi
#export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
#ssh-add -l > /dev/null || ssh-add
#
#function sshdiff() {
#        colordiff <(ssh $1 cat $3) <(ssh $2 cat $3)
#}
#
